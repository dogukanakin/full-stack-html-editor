{"ast":null,"code":"var _jsxFileName = \"/Users/dogukanakin/Desktop/froala_documentation-main3/frontend/src/pages/BlogList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogList = () => {\n  _s();\n  const [pages, setPages] = useState([]);\n  const [authors, setAuthors] = useState({});\n  useEffect(() => {\n    LoadData();\n  }, []);\n  async function LoadData() {\n    try {\n      const [pagesResponse, articlesResponse] = await Promise.all([fetch('http://127.0.0.1:8000/api/pages'), fetch('http://127.0.0.1:8000/api/articles')]);\n      if (!pagesResponse.ok || !articlesResponse.ok) {\n        throw new Error('Veri çekme hatası');\n      }\n      const pagesData = await pagesResponse.json();\n      const articlesData = await articlesResponse.json();\n      const authorMap = {};\n      articlesData.forEach(article => {\n        authorMap[article.id] = article.articleTitle;\n      });\n      setAuthors(authorMap);\n      setPages(pagesData);\n    } catch (error) {\n      console.error('Veri çekerken hata:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Table, {\n    dark: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Article Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: pages.map(page => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: page.pageTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: page.content.slice(0, 10)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: authors[page.articleTitleforPage]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, page.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogList, \"d11NFUV1eXwudxXPAVx9B2jOuWc=\");\n_c = BlogList;\nexport default BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["React","useState","useEffect","Table","jsxDEV","_jsxDEV","BlogList","_s","pages","setPages","authors","setAuthors","LoadData","pagesResponse","articlesResponse","Promise","all","fetch","ok","Error","pagesData","json","articlesData","authorMap","forEach","article","id","articleTitle","error","console","dark","children","fileName","_jsxFileName","lineNumber","columnNumber","map","page","pageTitle","content","slice","articleTitleforPage","_c","$RefreshReg$"],"sources":["/Users/dogukanakin/Desktop/froala_documentation-main3/frontend/src/pages/BlogList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table } from 'reactstrap'\n\nconst BlogList = () => {\n  const [pages, setPages] = useState([])\n  const [authors, setAuthors] = useState({})\n\n  useEffect(() => {\n    LoadData()\n  }, [])\n\n  async function LoadData () {\n    try {\n      const [pagesResponse, articlesResponse] = await Promise.all([\n        fetch('http://127.0.0.1:8000/api/pages'),\n        fetch('http://127.0.0.1:8000/api/articles')\n      ])\n\n      if (!pagesResponse.ok || !articlesResponse.ok) {\n        throw new Error('Veri çekme hatası')\n      }\n\n      const pagesData = await pagesResponse.json()\n      const articlesData = await articlesResponse.json()\n\n      const authorMap = {}\n      articlesData.forEach(article => {\n        authorMap[article.id] = article.articleTitle\n      })\n      setAuthors(authorMap)\n\n      setPages(pagesData)\n    } catch (error) {\n      console.error('Veri çekerken hata:', error)\n    }\n  }\n\n  return (\n    <Table dark>\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Content</th>\n          <th>Article Author</th>\n        </tr>\n      </thead>\n      <tbody>\n        {pages.map(page => (\n          <tr key={page.id}>\n            <td>{page.pageTitle}</td>\n            <td>{page.content.slice(0, 10)}</td>\n            <td>{authors[page.articleTitleforPage]}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default BlogList\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}